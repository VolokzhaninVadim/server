@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Deployment.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

!procedure $CreateTag ($alias, $description="")
    AddElementTag($alias, $legendText=$description, $sprite=%string("img:../_images/100x100/"+$alias+".png{scale=0.5}"))
!endprocedure

$CreateTag(firefox, "Firefox")
$CreateTag(tplink, "TP-Link")
$CreateTag(pikvm, "PiKVM")
$CreateTag(nut, "NUT")
$CreateTag(proxmox, "Proxmox")
$CreateTag(ubuntu, "Ubuntu")
$CreateTag(pihole, "PiHole")
$CreateTag(npm, "Nginx Proxy Manager")
$CreateTag(duckdns, "DuckDNS")
$CreateTag(tor, "TOR")
$CreateTag(home_assistant, "home_assistant")
$CreateTag(vscode, "VSCode")
$CreateTag(node_red, "Node-RED")
$CreateTag(mosquitto, "Mosquitto")
$CreateTag(zigbee2mqtt, "Zigbee2mqtt")

title "Сервер Волокжанина Вадима"

Person(users, "Пользователи сервисов")
System_Ext(browser, "Браузер пользователя", "Просмотр web-контента", $tags="firefox")
System_Ext(tplink, "Роутер", "Маршрутизация трафика", $tags="tplink")
System(pikvm, "KVM", "Удаленное управление через web-браузер", $tags="pikvm")
System(ups, "UPS", "Мониторинг UPS", $tags="nut")


AddProperty("vCPU", "6")
AddProperty("RAM GB", "94")
AddProperty("SSD GB (System)", "2 * 512 [ZFS RAID 1]")
AddProperty("HDD TB (VMs)", "2 * 12 [ZFS RAID 1] + 128 GB SSD for cache (VMs)")
AddProperty("HDD TB (for cache VMs)", "128 GB SSD ")
AddProperty("HDD TB (Backups)", "8 [ZFS Single disk]")
AddProperty("NIC", "1")
AddProperty("graphic card (NVidia)", "1")
Deployment_Node(server, "Сервер Волокжанина Вадима", $tags="proxmox") {

  Deployment_Node(backup-server, "Сервер резервных копий", "VM", "", $tags="proxmox"){
}

  Deployment_Node(smart-home, "Умный дом", "VM", "Docker", $tags="ubuntu"){
    Component_Ext(home_assistant, "Home Assistant", "Умный дом", "Управление умным домом", $tags="home_assistant")
    Component_Ext(vscode, "VSCode server", "VSCode server", "Написание и редактирование кода", $tags="vscode")
    Component_Ext(node_red, "Node-RED", "Node-RED", "Визуальное программирование автоматизаций", $tags="node_red")
    Component_Ext(mosquitto, "Mosquitto", "Mosquitto", "Брокер сообщений для умного дома", $tags="mosquitto")
    Component_Ext(mosquzigbee2mqttitto, "Zigbee2mqtt", "Zigbee2mqtt", "Zigbee сообщения в MQTT сообщения", $tags="zigbee2mqtt")
}

  Deployment_Node(proxy, "Проксирование web-запросов", "VM", "Docker", $tags="ubuntu"){
    Component_Ext(pihole, "PiHole", "DNS-сервер", "Локальный DNS-сервер с функцией блокировки рекламы", $tags="pihole")
    Component_Ext(npm, "Nginx Proxy Manager", "Proxy-сервер", "Проксирование web-запросов на сервер", $tags="npm")
    Component_Ext(duckdns, "DuckDNS", "DuckDNS", "DDNS", $tags="duckdns")
    Component_Ext(tor, "TOR", "TOR", "Проксирование web-запросов от сервера", $tags="tor")
}

  Deployment_Node(mediaserver, "Медиа сервер", "VM", "Docker", $tags="ubuntu"){
    Component_Ext(test, "PiHole", "DNS-сервер", "Локальный DNS-сервер с функцией блокировки рекламы", $tags="pihole")
}

  Deployment_Node(cloud, "Облако", "VM", "Docker", $tags="ubuntu"){
    Component_Ext(test1, "PiHole", "DNS-сервер", "Локальный DNS-сервер с функцией блокировки рекламы", $tags="pihole")
}



}

Rel(users, browser, "Просмотр Web-страниц")
Rel(browser, tplink, "Web-запросы")
Rel(tplink, pikvm, "Web-запросы")
Rel(tplink, server, "Web-запросы")
Rel(pikvm, server, "Управление")
Rel(ups, server, "Электричество")
Rel(server, ups, "Сигнал о штатном выключении")

SHOW_LEGEND()

@enduml
